/'초안'/
@startuml
(*) --> message 수신
--> "환경설정 파일 읽기"
/'수신된 메시지 유무 확인. 없으면 시작으로 이동'/
--> [logback 저장 위치/파일용량,\nyml rabbit 정보 읽기] "LogT.log 저장"
/'안될 경우'/
--> (*)
@enduml

/'초안2'/
'@startuml
'start
'if (메시지 수신) then (yes)
'    :Queue에서 메시지 수신;
'    if (@RabbitListener 수신) then (yes)
'        :@RabbitListener를 통해 메시지 수신;
'        if (로그 저장) then (yes)
'            :LogT.log 파일에 로그 저장;
'        else (no)
'            stop
'        endif
'    else (no)
'        stop
'    endif
'else (no)
'    stop
'endif
'stop
'
'@enduml


/'초안3'/
'@startuml
'start
'if (메시지 수신 성공?) then (yes)
'    :Queue에서 메시지 수신;
'    if (@RabbitListener 수신 성공?) then (yes)
'        :@RabbitListener를 통해 메시지 수신;
'        if (로그 저장 성공?) then (yes)
'            :LogT.log 파일에 로그 저장;
'        else (로그 저장 실패)
'            :로그 저장 실패 메시지 전송;
'        endif
'    else (RabbitListener 실패)
'        :RabbitListener 실패 메시지 전송;
'    endif
'else (메시지 수신 실패)
'    :메시지 수신 실패 메시지 전송;
'endif
'stop
'@enduml


/'retry 추가'/
'@startuml
'start
'if (메시지 수신) then (yes)
'    :Queue에서 메시지 수신;
'    if (@RabbitListener 수신) then (yes)
'        :@RabbitListener를 통해 메시지 수신;
'        if (로그 저장) then (yes)
'            :LogT.log 파일에 로그 저장;
'        else (no)
'            :로컬 저장소에 로그 저장;
'        endif
'    else (no)
'        :RabbitListener 실패 메시지 전송;
'    endif
'else (no)
'    if (재시도 횟수 초과) then (yes)
'        :재시도 횟수 초과 메시지 전송;
'    else (no)
'        :재시도 횟수 증가;
'        :재시도 시간 간격 설정;
'        :메시지 재시도;
'        if (재시도) then (yes)
'            :성공 메시지 전송;
'        endif
'    endif
'endif
'stop
'@enduml


/'retry 5회 설정 ver'/
'@startuml
'start
'if (메시지 수신) then (yes)
'    :Queue에서 메시지 수신;
'    if (@RabbitListener 수신) then (yes)
'        :@RabbitListener를 통해 메시지 수신;
'        if (로그 저장) then (yes)
'            :LogT.log 파일에 로그 저장;
'        else (no)
'            :로컬 저장소에 로그 저장;
'        endif
'    else (no)
'        :RabbitListener 실패 메시지 전송;
'    endif
'else (no)
'    if (재시도 횟수 초과) then (yes)
'        :재시도 횟수 초과 메시지 전송;
'    else (no)
'        :재시도 횟수 증가;
'        :재시도 시간 간격 설정;
'        :메시지 재시도;
'        if (재시도 성공) then (yes)
'            :성공 메시지 전송;
'        endif
'    endif
'endif
'stop
'@enduml


/'loop 작성 버전'/
'@startuml
'start
'repeat :Queue에서 메시지 수신;
'    if (@RabbitListener 수신) then (yes)
'        :@RabbitListener를 통해 메시지 수신;
'        if (로그 저장) then (yes)
'            :LogT.log 파일에 로그 저장;
'        else (no)
'            :로컬 저장소에 로그 저장;
'        endif
'    else (no)
'        :RabbitListener 실패 메시지 전송;
'    endif
'repeat while (data available?)
'stop
'@enduml


/'일단 보고드릴 버전-다시다시'/
'@startuml
'start
':Queue에서 메시지 수신;
'if (@RabbitListener 수신) then (yes)
'    :@RabbitListener를 통해 메시지 수신;
'    if (로그 저장) then (yes)
'        :LogT.log 파일에 로그 저장;
'    else (no)
'        :로컬 저장소에 로그 저장;
'    endif
'else (no)
'    :RabbitListener 실패 메시지 전송;
'endif
'stop
'@enduml


@startuml
(*) --> rabbitmq 서버 연결을 위해 서버 정보 읽고
--> "특정 queue에 있는 메시지를 수신하기 위해 환경 설정 파일을 읽고"
--> "수신된 메시지가 있으면 LogT.log에 로그 저장하고"
--> "수신된 메시지가 없으면 대기상태"
--> "수신 처리가 완료 되었다고 rabbitmq 서버에 알리고 다음 메시지 기다림"
--> "repeat"
--> (*)
@enduml





